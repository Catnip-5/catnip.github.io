<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>UML类图</title>
    <url>/UML/UML%E7%B1%BB%E5%9B%BE/</url>
    <content><![CDATA[<style>
[alt="类之间的关系"] {
    width: 360px;
}
</style>

<h2 id="UML图分类"><a href="#UML图分类" class="headerlink" title="UML图分类"></a>UML图分类</h2><ul>
<li>用例图(use case)</li>
<li>静态结构图：类图、对象图、包图、组件图、部署图</li>
<li>动态行为图：交互图(时序图与协作图)、状态图、活动图</li>
</ul>
<span id="more"></span>

<h2 id="UML类图"><a href="#UML类图" class="headerlink" title="UML类图"></a>UML类图</h2><ul>
<li>用于描述系统中的类(对象)本身的组成和类(对象)之间的各种静态关系</li>
</ul>
<h3 id="属性、方法表达式"><a href="#属性、方法表达式" class="headerlink" title="属性、方法表达式"></a>属性、方法表达式</h3><ul>
<li>属性：<code>可见性 名称:类型 [ = 缺省值 ]</code></li>
<li>方法：<code>可见性 名称(参数列表) [ : 返回类型]</code></li>
</ul>
<p>可见性说明：<code>- private</code>、<code>～ default</code>、<code># protected</code>、<code>+ public</code></p>
<h3 id="类之间的关系"><a href="#类之间的关系" class="headerlink" title="类之间的关系"></a>类之间的关系</h3><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E7%B1%BB%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="类之间的关系"></p>
<h2 id="依赖关系-Dependence"><a href="#依赖关系-Dependence" class="headerlink" title="依赖关系(Dependence)"></a>依赖关系(Dependence)</h2><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB.png" alt="依赖关系"></p>
<h2 id="关联关系-Association"><a href="#关联关系-Association" class="headerlink" title="关联关系(Association)"></a>关联关系(Association)</h2><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB.png" alt="关联关系"></p>
<h2 id="泛化关系-Generalization"><a href="#泛化关系-Generalization" class="headerlink" title="泛化关系(Generalization)"></a>泛化关系(Generalization)</h2><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E6%B3%9B%E5%8C%96%E5%85%B3%E7%B3%BB.png" alt="泛化关系"></p>
<h2 id="实现关系-Implementation"><a href="#实现关系-Implementation" class="headerlink" title="实现关系(Implementation)"></a>实现关系(Implementation)</h2><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E5%AE%9E%E7%8E%B0%E5%85%B3%E7%B3%BB.png" alt="实现关系"></p>
<h2 id="聚合关系-Aggregation"><a href="#聚合关系-Aggregation" class="headerlink" title="聚合关系(Aggregation)"></a>聚合关系(Aggregation)</h2><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E8%81%9A%E5%90%88%E5%85%B3%E7%B3%BB.png" alt="聚合关系"></p>
<h2 id="组合关系-Composition"><a href="#组合关系-Composition" class="headerlink" title="组合关系(Composition)"></a>组合关系(Composition)</h2><p><img src="/UML/UML%E7%B1%BB%E5%9B%BE/%E7%BB%84%E5%90%88%E5%85%B3%E7%B3%BB.png" alt="组合关系"></p>
]]></content>
      <categories>
        <category>UML</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>Git_常用命令</title>
    <url>/Git/Git_%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询配置信息</span></span><br><span class="line">git config --list                                <span class="comment"># 列出当前配置</span></span><br><span class="line">git config --<span class="built_in">local</span> --list                        <span class="comment"># 列出仓库配置</span></span><br><span class="line">git config --global --list                       <span class="comment"># 列出全局配置</span></span><br><span class="line">git config --system --list                       <span class="comment"># 列出系统配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置用户信息</span></span><br><span class="line">git config --global user.name &lt;user&gt;             <span class="comment"># 配置用户名</span></span><br><span class="line">git config --global user.email &lt;email&gt;           <span class="comment"># 配置用户邮箱</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他配置</span></span><br><span class="line">git config --global merge.tool vimdiff           <span class="comment"># 配置解决冲突时使用哪种差异分析工具，比如要使用vimdiff</span></span><br><span class="line">git config --global alias.co checkout    　　　   <span class="comment"># 配置别名</span></span><br><span class="line">git config --global color.ui auto    　　　　　　  <span class="comment"># 配置git命令输出为彩色的</span></span><br><span class="line">git config --global core.editor vi    　　　　　　 <span class="comment"># 配置git使用的文本编辑器</span></span><br><span class="line">git config --global credential.helper cache      <span class="comment"># 配置到缓存 默认15分钟</span></span><br><span class="line">git config --global credential.helper <span class="string">&#x27;cache --timeout=3600&#x27;</span>      <span class="comment"># 修改缓存时间</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 增加文件</span></span><br><span class="line">git add .                                        <span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">git add &lt;file&gt;...                                <span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">git add &lt;<span class="built_in">dir</span>&gt;                                    <span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line">git <span class="built_in">rm</span> &lt;file&gt;...                                 <span class="comment"># 将工作区，暂存区文件删除</span></span><br><span class="line">git <span class="built_in">rm</span> --cached &lt;file&gt;                           <span class="comment"># 将暂存区文件删除，工作区保留</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交文件</span></span><br><span class="line">git commit -m &lt;message&gt;                          <span class="comment"># 提交暂存区的所有文件到本地库</span></span><br><span class="line">git commit &lt;file&gt;... -m &lt;message&gt;                <span class="comment"># 提交暂存区的指定文件到本地库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销文件</span></span><br><span class="line"><span class="comment"># reset [&lt;mode&gt;] 参数说明：</span></span><br><span class="line"><span class="comment">#   - soft：在本地库移动 HEAD 指针</span></span><br><span class="line"><span class="comment">#   - mixed：在本地库移动 HEAD 指针, 重置暂存区</span></span><br><span class="line"><span class="comment">#   - hard：在本地库移动 HEAD 指针, 重置暂存区, 重置工作区</span></span><br><span class="line">git reset --hard HEAD                            <span class="comment"># 将暂存区文件恢复到工作区</span></span><br><span class="line">git reset --hard &lt;<span class="built_in">id</span>&gt;                            <span class="comment"># 基于索引值, 可前进后退</span></span><br><span class="line">git reset --hard HEAD^                           <span class="comment"># 使用^符号：只能前进 (一个^表示前进一步，n 个表示前进 n 步)</span></span><br><span class="line">git reset --hard HEAD~n                          <span class="comment"># 使用~符号：只能前进 (表示前进 n 步)</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 比较文件</span></span><br><span class="line">git diff &lt;file&gt;                                  <span class="comment"># 比较工作区和暂存区文件差异 </span></span><br><span class="line">git diff &lt;<span class="built_in">id</span>&gt; &lt;file&gt;                             <span class="comment"># 比较工作区和本地库文件差异 </span></span><br><span class="line">git diff &lt;id1&gt; &lt;id2&gt;                             <span class="comment"># 比较本地库两个文件差异</span></span><br><span class="line">git diff &lt;branch1&gt; &lt;branch2&gt;                     <span class="comment"># 比较两个分支之间的文件差异</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名文件  </span></span><br><span class="line">git <span class="built_in">mv</span> &lt;file&gt; &lt;renamefile&gt;                       <span class="comment"># 重命名文件  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看工作区、暂存区状态</span></span><br><span class="line">git status                                       <span class="comment"># 查看所有文件状态</span></span><br><span class="line">git status &lt;file&gt;                                <span class="comment"># 查看指定文件状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看历史记录</span></span><br><span class="line">git <span class="built_in">log</span>                                          <span class="comment"># 查看所有历史记录 (多屏显示控制方式：空格向下翻页, b 向上翻页, q 退出)    </span></span><br><span class="line">git <span class="built_in">log</span> &lt;file&gt;                                   <span class="comment"># 查看指定文件历史记录  </span></span><br><span class="line">git <span class="built_in">log</span> &lt;<span class="built_in">dir</span>&gt;                                    <span class="comment"># 查看指定目录历史记录</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline                         <span class="comment"># 每条记录只显示一行，只能查看之前历史记录</span></span><br><span class="line">git <span class="built_in">log</span> --oneline                                <span class="comment"># 每条记录只显示一行，只能查看之前历史记录</span></span><br><span class="line">git reflog                                       <span class="comment"># 查看所有分支的所有操作记录</span></span><br></pre></td></tr></table></figure>

<h2 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建远程库地址别名</span></span><br><span class="line">git remote add &lt;remote&gt; &lt;url&gt;                    <span class="comment"># 创建远程库url别名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改远程库地址url</span></span><br><span class="line">git remote set-url &lt;remote&gt; &lt;url&gt;                <span class="comment"># 修改远程库url地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程库地址别名</span></span><br><span class="line">git remote <span class="built_in">rm</span> &lt;remote&gt;                           <span class="comment"># 删除远程库url别名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程库</span></span><br><span class="line">git remote -v                                    <span class="comment"># 查看所有远程库</span></span><br><span class="line">git remote show &lt;remote&gt;                         <span class="comment"># 查看某个远程仓库的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送远程库</span></span><br><span class="line">git push                                         <span class="comment"># 推送本地所有分支到远程仓库</span></span><br><span class="line">git push &lt;remote&gt; &lt;branch&gt;                       <span class="comment"># 推送本地指定分支到远程仓库</span></span><br><span class="line">git push &lt;remote&gt; &lt;local-branch&gt;:&lt;remote-branch&gt; <span class="comment"># 推送本地指定分支到远程仓库指定分支</span></span><br><span class="line">git push &lt;remote&gt; --force                        <span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push &lt;remote&gt; --all                          <span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆远程库</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;url&gt;                                  <span class="comment"># 克隆项目(1.完整的把远程库下载到本地; 2.创建&lt;remote&gt;远程地址别名; 3.初始化本地库)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取远程库</span></span><br><span class="line">git fetch &lt;remote&gt; &lt;branch&gt;                      <span class="comment"># 从远程库拉取指定分支到本地库</span></span><br><span class="line">git pull                                         <span class="comment"># 从远程库拉取所有分支到本地库，并合并到工作区(pull = fetch + merge)</span></span><br><span class="line">git pull &lt;remote&gt; &lt;branch&gt;                       <span class="comment"># 从远程库拉取指定分支到本地库，并合并到工作区(pull = fetch + merge)</span></span><br></pre></td></tr></table></figure>

<h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch                                       <span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch -r                                    <span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -a                                    <span class="comment"># 列出所有本地和远程分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建分支</span></span><br><span class="line">git branch &lt;branch&gt;                              <span class="comment"># 新建本地分支，但依然停留在当前分支</span></span><br><span class="line">git checkout -b &lt;branch&gt;                         <span class="comment"># 新建本地分支，并切换到该分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">git branch -d &lt;branch&gt;                           <span class="comment"># 删除本地分支</span></span><br><span class="line">git branch -dr &lt;remote/branch&gt;                   <span class="comment"># 删除远程分支</span></span><br><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt;              <span class="comment"># 删除远程分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout &lt;branch&gt;                            <span class="comment"># 切换到指定分支</span></span><br><span class="line">git checkout -                                   <span class="comment"># 切换到上一个分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并分支</span></span><br><span class="line">git merge &lt;branch&gt;                               <span class="comment"># 合并指定分支到当前分支</span></span><br></pre></td></tr></table></figure>

<h2 id="版本操作"><a href="#版本操作" class="headerlink" title="版本操作"></a>版本操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">git tag                                          <span class="comment"># 查看本地库版本</span></span><br><span class="line">git tag -r                                       <span class="comment"># 查看远程库版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建版本</span></span><br><span class="line">git tag &lt;tag&gt;                                    <span class="comment"># 创建本地库版本</span></span><br><span class="line">git tag -a &lt;tag&gt; -m &lt;message&gt;                    <span class="comment"># 创建本地库版本(带注释)</span></span><br><span class="line">git push &lt;remote&gt; &lt;tag&gt;                          <span class="comment"># 创建远程库版本(本地库版本push到远程)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除版本</span></span><br><span class="line">git tag -d &lt;name&gt;                                <span class="comment"># 删除本地库版本</span></span><br><span class="line">git push &lt;remote&gt; --delete tag &lt;tag&gt;             <span class="comment"># 删除远程库版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换版本</span></span><br><span class="line">git checkout &lt;tag&gt;                               <span class="comment"># 切换版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取远程版本</span></span><br><span class="line">git pull &lt;remote&gt; --tags                         <span class="comment"># 拉取远程库所有版本到本地</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送远程版本</span></span><br><span class="line">git push &lt;remote&gt; &lt;tag&gt;                          <span class="comment"># 推送本地库指定版本到远程</span></span><br><span class="line">git push &lt;remote&gt; --tags                         <span class="comment"># 推送本地库所有版本到远程</span></span><br></pre></td></tr></table></figure>

<h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt;                               <span class="comment"># 显示command的help</span></span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://git-scm.com/docs">Git文档</a></li>
<li><a href="https://gitee.com/progit/">Pro Git 中文版</a></li>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html">Git 简明指南</a></li>
<li><a href="http://gitbook.liuhui998.com/index.html">Git Community Book 中文版</a></li>
<li><a href="http://marklodato.github.io/visual-git-guide/index-zh-cn.html">图解Git</a></li>
</ul>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>版本控制</tag>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
